{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/convertDates.js","actions/events.js","actions/auth.js","router/PublicRoute.js","router/PrivateRoute.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/ui/Loading.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","convertDates","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventsLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","PublicRoute","isLoggedIn","Component","component","rest","props","to","PrivateRoute","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","Loading","AppRouter","path","exact","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20d2a59a.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n\n    eventStartAddNew: '[event] Start add event',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n    eventLogout: '[event] Event clear logout',\n\n\n    authCheckingFinish: '[auth] Finish cheking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authRegister: '[auth] register',\n    authLogout: '[auth] Logout',\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return{\n                ...state,\n                activeEvent: null\n            }\n\n            \n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n            case types.authLogout:\r\n                return {\r\n                    checking: false\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n} \r\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token,\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","import moment from \"moment\";\r\n\r\n\r\nexport const convertDates = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    )\r\n\r\n}","import Swal from \"sweetalert2\";\nimport { convertDates } from \"../helpers/convertDates\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\n\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n        const { uid, name } = getState().auth;\n        try {\n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error', error.msg, 'error');\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdated = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchWithToken(`events/${ event.id }`, event, 'PUT');\n            const body = await resp.json();\n\n            if(body.ok){\n                dispatch( eventUpdated( event ) )\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error', error.msg, 'error');\n        }\n    }\n}\n\n\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = (  ) => {\n    return async (dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n            const resp = await fetchWithToken(`events/${ id }`, {}, 'DELETE');\n            const body = await resp.json();\n\n\n            if(body.ok){\n                dispatch( eventDeleted());\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error', error.msg, 'error');\n        }\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchWithToken('events');\n            const body = await resp.json();\n\n            const events = convertDates(body.events);\n\n            dispatch(eventsLoaded(events))\n\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error', error.msg, 'error');\n        }\n\n    }\n};\n\nconst eventsLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const eventClear = () => ({ type: types.eventLogout });\n\n\n\n","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventClear } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchWithoutToken('auth/new', { name, email, password }, 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchWithToken('auth/renew');\r\n\r\n        const body = await resp.json();\r\n\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( eventClear() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) =>(\r\n                (!isLoggedIn)\r\n                    ? (<Component { ...props } />)\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) =>(\r\n                (isLoggedIn)\r\n                    ? (<Component { ...props } />)\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\n\nexport const LoginScreen = () => {\n\n\n    const dispatch = useDispatch();\n\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        loginEmail: '',\n        loginPassword: ''\n    });\n\n    const { loginEmail, loginPassword } = formLoginValues;\n\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        registerName: '',\n        registerEmail: '',\n        registerPassword: '',\n        registerPassword2: ''\n    });\n\n    const { registerName, registerEmail, registerPassword, registerPassword2 } = formRegisterValues;\n\n\n\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(loginEmail, loginPassword));\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (registerPassword !== registerPassword2) {\n            Swal.fire('Error', 'Las contraseñas no coinciden', 'error')\n        }\n        dispatch(startRegister(registerEmail, registerPassword, registerName,));\n    }\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"loginEmail\"\n                                value={loginEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"loginPassword\"\n                                placeholder=\"Contraseña\"\n                                onChange={handleLoginInputChange}\n                                value={loginPassword}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"registerName\"\n                                value={registerName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"registerEmail\"\n                                value={registerEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"registerPassword\"\n                                value={registerPassword}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"registerPassword2\"\n                                value={registerPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div className=\"mt-5 mx-auto\">\n                <h5 className=\"mb-4\">Try</h5>\n\n                <pre>\n\n                    user: test@test.com\n                </pre>\n                <pre>\n                    pass: 123456\n                </pre>\n\n\n\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n            \n            <button \n            onClick={ handleLogout }\n            className=\"btn btn-outline-danger\">\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport {  eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdated( formValues ) )\n        } else {\n            dispatch( eventStartAddNew( formValues ) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() )\n      \n    }, [dispatch]);\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        \n        \n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react'\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <i className=\"fa fa-spin fa-spinner fa-4x loading-spiner\"></i>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { Loading } from '../components/ui/Loading';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { uid, checking } = useSelector(state => state.auth);\n\n    \n    useEffect(() => {\n        dispatch( startChecking() )\n    }, [dispatch]);\n    \n    /* const [isLoggedIn, setIsLoggedIn] = useState(false);\n    useEffect(() => {\n        if( uid ){\n            setIsLoggedIn( true )\n        }else{\n            setIsLoggedIn( false )\n        }\n    }, [uid]); */\n\n\n    if( checking ){\n        return (\n            <Loading />\n        )\n    }\n\n\n\n    return (\n        <Router>\n            <div> \n                <Switch>\n                    <PublicRoute\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isLoggedIn={ !!uid }\n                    />\n\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        isLoggedIn={ !!uid }\n                        component={CalendarScreen}\n                    />\n\n                    <Redirect to=\"/login\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n ","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}